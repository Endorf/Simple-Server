---
- name: Create Prometheus user
  block:

  - name: Create Group 
    group:
      name: "{{ prometheus_user_group }}"

  - name: Add Prometheus user
    user:
      state: present
      system: true
      shell: "/usr/sbin/nologin"
      name: "{{ prometheus_user }}"
      groups: "{{ prometheus_user_group }}"
      createhome: false
      home: "{{ db_dir }}"

  - name: Create user home directory
    file:
      path: "{{ db_dir }}"
      state: directory
      owner: "{{ prometheus_user }}"
      group: "{{ prometheus_user_group }}"
      mode: 0755

  - name: Create user configuration directories
    file:
      path: "{{ item }}"
      state: directory
      owner: "{{ prometheus_user }}"
      group: "{{ prometheus_user_group }}"
      mode: 0770
    loop:
      - "{{ config_dir }}"
      - "{{ config_dir }}/rules"
      - "{{ config_dir }}/file_sd"


- name: Install Prometheus
  vars:
    prometheus_url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest_tmp_archive_path: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz"
    dest_tmp_path: "/tmp/prometheus-{{ prometheus_version }}.linux-amd64"
    
  block:
  - name: Download Prometheus to local folder
    become: false
    get_url:
      url: "{{ prometheus_url }}"
      dest: "{{ dest_tmp_archive_path }}"
      checksum: "sha256:{{ prometheus_checksum }}"
    register: _download_archive
    until: _download_archive is succeeded
    retries: 2
    delay: 1
    delegate_to: localhost
    check_mode: false

  - name: Unpack Prometheus binaries
    become: false
    unarchive:
      src: "{{ dest_tmp_archive_path }}"
      dest: "/tmp"
      creates: "{{ dest_tmp_path }}/prometheus"
    delegate_to: localhost
    check_mode: false

  - name: Copy promtool prometheus
    copy:
      src: "{{ dest_tmp_path }}/{{ item }}"
      dest: "{{ work_dir }}/{{ item }}"
      mode: 0754
      owner: "{{ prometheus_user }}"
      group: "{{ prometheus_user_group }}"
    with_items:
      - prometheus
      - promtool

  - name: Copy console libs
    copy:
      src: "{{ dest_tmp_path }}/{{ item }}/"
      dest: "{{ config_dir }}/{{ item }}"
      mode: 0644
      owner: "{{ prometheus_user }}"
      group: "{{ prometheus_user_group }}"
    with_items:
      - console_libraries
      - consoles
  
  - name: Create service file
    template:
      src: "prometheus.service.j2"
      dest: "/etc/systemd/system/prometheus.service"
      mode: preserve
    notify:
      - Reload systemd
      - Restart Prometheus


- name: Install Node Exporter
  vars:
    node_exporter_url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    dest_tmp_archive_path: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    dest_tmp_path: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64"
    
  block:
  - name: Download Node Exporter to local folder
    become: false
    get_url:
      url: "{{ node_exporter_url }}"
      dest: "{{ dest_tmp_archive_path }}"
    register: _download_archive
    until: _download_archive is succeeded
    retries: 2
    delay: 1
    delegate_to: localhost
    check_mode: false

  - name: Unpack Node Exporter binaries
    become: false
    unarchive:
      src: "{{ dest_tmp_archive_path }}"
      dest: "/tmp"
      creates: "{{ dest_tmp_path }}/node_exporter"
    delegate_to: localhost
    check_mode: false

  - name: Copy node_exporter
    copy:
      src: "{{ dest_tmp_path }}/node_exporter"
      dest: "{{ work_dir }}/node_exporter"
      mode: 0754
      owner: "{{ prometheus_user }}"
      group: "{{ prometheus_user_group }}"

  - name: Create service file
    template:
      src: "node_exporter.service.j2"
      dest: "/etc/systemd/system/node_exporter.service"
      mode: preserve
    notify:
      - Reload systemd
      - Restart Node Exporter